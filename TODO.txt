Questions and known issues
--------------------------

- add simple demo, usage instructions and help (to the plugin's _site).

- check for error resilience and propagation (invalid query request, for example).

- configurable algorithms.
- how to pass algorithm settings?
- resource lookup (lexical resources, licensing for Lingo3G)

- add a test case with yaml body (or other xcontent)

- performance implications and performance testing (threading inside actions/ dispatched actions)? 

- add/move source() parsing from REST to the request builder/object.

- Should we limit or augment the search window somehow (so that the clustering takes place on, say, 100 top results,
  but the returned list is only the top-k)? 
  This is problematic from the technical POV (parsed SearchRequest doesn't expose the internal search request directly;
  uri parameters get injected as extraSource); in most cases the user will need all document references anyway to link
  them up from clusters. Leaving for now. The search query determines the number of documents (and the type of aggregation,
  etc.) to use.
